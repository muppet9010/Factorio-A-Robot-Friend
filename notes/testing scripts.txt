All done for player 1.



Make a robot at spawn and make it walk to the set location under a job:

/sc __a_robot_friend__
local robotPosition, targetPosition = {x=2,y=2}, {x=81,y=118}
robotPosition = game.surfaces[1].find_non_colliding_position("character", robotPosition, 10, 0.2, false)
if robotPosition == nil then game.print("no valid robot creation position", {1,0,0,1}); return; end
targetPosition = game.surfaces[1].find_non_colliding_position("character", targetPosition, 10, 0.2, false)
if targetPosition == nil then game.print("no valid target position", {1,0,0,1}); return; end
local robot = MOD.Interfaces.RobotManager.CreateRobot(game.surfaces[1], robotPosition, game.get_player(1))
local job = MOD.Interfaces.Jobs.MoveToLocation.Create(1, targetPosition, game.surfaces[1])
MOD.Interfaces.RobotManager.AssignRobotToJob(robot, job)




Move an existing robot (10 to a series of positions.

/sc __a_robot_friend__
local robotId, targetPosition1, targetPosition2, targetPosition3 = 1, {x=4,y=24}, {x=-5,y=27}, {x=-14,y=-11}
targetPosition1 = game.surfaces[1].find_non_colliding_position("character", targetPosition1, 10, 0.2, false)
targetPosition2 = game.surfaces[1].find_non_colliding_position("character", targetPosition2, 10, 0.2, false)
targetPosition3 = game.surfaces[1].find_non_colliding_position("character", targetPosition3, 10, 0.2, false)
local robot = global.RobotManager.robots[robotId]
local job = MOD.Interfaces.Jobs.MoveToLocation.Create(1, targetPosition1, game.surfaces[1])
MOD.Interfaces.RobotManager.AssignRobotToJob(robot, job)
job = MOD.Interfaces.Jobs.MoveToLocation.Create(1, targetPosition2, game.surfaces[1])
MOD.Interfaces.RobotManager.AssignRobotToJob(robot, job)
job = MOD.Interfaces.Jobs.MoveToLocation.Create(1, targetPosition3, game.surfaces[1])
MOD.Interfaces.RobotManager.AssignRobotToJob(robot, job)
